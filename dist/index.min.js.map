{"version":3,"sources":["webpack:///./index.ts","webpack:///external \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"names":["useFetch","url","options","isCache","cache","useRef","useState","isFetch","setFetch","initialState","useMemo","status","error","undefined","data","fetchReducer","useCallback","state","action","type","payload","useReducer","dispatch","request","success","failure","useEffect","cancelRequest","current","fetch","json","message","module","exports","__WEBPACK_EXTERNAL_MODULE__297__","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"yuDAAA,aA4Ba,EAAAA,SAAW,SACtBC,EACAC,EACAC,QAAA,IAAAA,OAAA,GAEA,IAAMC,EAAQ,EAAAC,OAAiB,IAEzB,EAAsB,EAAAC,UAAS,GAA9BC,EAAO,KAAEC,EAAQ,KAElBC,EAAe,EAAAC,SACnB,WAAM,MAAC,CACLC,OAAQ,OACRC,WAAOC,EACPC,UAAMD,KAER,IAGIE,EAAe,EAAAC,aACnB,SAACC,EAAiBC,GAChB,OAAQA,EAAOC,MACb,IAAK,UACH,cAAYV,GAAY,CAAEE,OAAQ,YACpC,IAAK,UACH,cAAYF,GAAY,CAAEE,OAAQ,UAAWG,KAAMI,EAAOE,UAC5D,IAAK,UACH,cAAYX,GAAY,CAAEE,OAAQ,UAAWC,MAAOM,EAAOE,UAC7D,QACE,OAAOH,KAGb,CAACR,IAGG,EAAoB,EAAAY,WAAWN,EAAcN,GAA5CQ,EAAK,KAAEK,EAAQ,KAChBC,EAAU,EAAAP,aAAY,WAAM,OAAAM,EAAS,CAAEH,KAAX,cAA+B,IAC3DK,EAAU,EAAAR,aACd,SAACI,GAAY,OAAAE,EAAS,CAAEH,KAAM,UAAWC,QAA5B,MACb,IAEIK,EAAU,EAAAT,aACd,SAACI,GAAY,OAAAE,EAAS,CAAEH,KAAM,UAAWC,QAA5B,MACb,IAuCF,OApCA,EAAAM,WAAU,WACR,GAAKzB,GAAQM,EAAb,CAIA,IAAIoB,GAAgB,EAwBpB,OAtBC,mC,0DAGC,GAFAJ,IAEIpB,GAAWC,EAAMwB,QAAQ3B,GAG3B,OAFAO,GAAS,WAAM,aACdmB,GAAiBH,EAAQpB,EAAMwB,QAAQ3B,IACxC,I,iBAIiB,O,sBAAA,GAAM4B,MAAM5B,EAAKC,I,OACrB,SADI,SACW4B,Q,cAAtBhB,EAAO,SAEbV,EAAMwB,QAAQ3B,GAAOa,EACrBN,GAAS,WAAM,aACdmB,GAAiBH,EAAQV,G,+BAE1BN,GAAS,WAAM,aACdmB,GAAiBF,EAAQ,EAAMM,S,8BAI7B,WACLJ,GAAgB,MAEjB,CAACF,EAAStB,EAASI,EAASL,EAASqB,EAASC,EAASvB,IAInD,CAACgB,EAFQ,EAAAD,aAAY,WAAM,OAAAR,GAAS,WAAM,cAAO,O,QC3G1DwB,EAAOC,QAAUC,ICCbC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUE,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,QCjBRG,CAAoB,M","file":"index.min.js","sourcesContent":["import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\n\ntype Action<K extends string, V = void> = V extends void\n  ? { type: K }\n  : { type: K } & V;\n\ntype ActionFetch<T> =\n  | Action<\"request\">\n  | Action<\"success\", { payload: T }>\n  | Action<\"failure\", { payload: string }>;\n\ninterface State<T> {\n  status: \"init\" | \"request\" | \"failure\" | \"success\";\n  data?: T;\n  error?: string;\n}\n\ninterface Cache<T> {\n  [url: string]: T;\n}\n\nexport const useFetch = <T>(\n  url: string,\n  options?: RequestInit,\n  isCache: boolean = false\n): [State<T>, () => void] => {\n  const cache = useRef<Cache<T>>({});\n\n  const [isFetch, setFetch] = useState(false);\n\n  const initialState = useMemo<State<T>>(\n    () => ({\n      status: \"init\",\n      error: undefined,\n      data: undefined,\n    }),\n    []\n  );\n\n  const fetchReducer = useCallback(\n    (state: State<T>, action: ActionFetch<T>): State<T> => {\n      switch (action.type) {\n        case \"request\":\n          return { ...initialState, status: \"request\" };\n        case \"success\":\n          return { ...initialState, status: \"success\", data: action.payload };\n        case \"failure\":\n          return { ...initialState, status: \"failure\", error: action.payload };\n        default:\n          return state;\n      }\n    },\n    [initialState]\n  );\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n  const request = useCallback(() => dispatch({ type: \"request\" }), []);\n  const success = useCallback(\n    (payload) => dispatch({ type: \"success\", payload }),\n    []\n  );\n  const failure = useCallback(\n    (payload) => dispatch({ type: \"failure\", payload }),\n    []\n  );\n\n  useEffect(() => {\n    if (!url || !isFetch) {\n      return;\n    }\n\n    let cancelRequest = false;\n\n    (async () => {\n      request();\n\n      if (isCache && cache.current[url]) {\n        setFetch(() => false);\n        !cancelRequest && success(cache.current[url]);\n        return;\n      }\n\n      try {\n        const response = await fetch(url, options);\n        const data = await response.json();\n\n        cache.current[url] = data;\n        setFetch(() => false);\n        !cancelRequest && success(data);\n      } catch (error) {\n        setFetch(() => false);\n        !cancelRequest && failure(error.message);\n      }\n    })();\n\n    return () => {\n      cancelRequest = true;\n    };\n  }, [failure, isCache, isFetch, options, request, success, url]);\n\n  const doFetch = useCallback(() => setFetch(() => true), []);\n\n  return [state, doFetch];\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(447);\n"],"sourceRoot":""}