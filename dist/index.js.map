{"version":3,"sources":["webpack:///./index.ts","webpack:///./tuple.ts","webpack:///./use-fetch-reducer.ts","webpack:///./use-headers.ts","webpack:///./use-trigger.ts","webpack:///external \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useTrigger } from \"./use-trigger\";\nimport { tuple } from \"./tuple\";\nimport { useFetchReducer } from \"./use-fetch-reducer\";\nimport { useHeaders } from \"./use-headers\";\n\ninterface UseFetchOption extends RequestInit {\n  responseType?: \"text\" | \"json\" | \"formData\" | \"blob\" | \"arrayBuffer\";\n}\n\nexport const useFetch = <TData, TError = any>(url: string) => {\n  const [options, setOptions] = useState<UseFetchOption>({} as UseFetchOption);\n\n  const { headers, setHeadersHandler, clearHeadersHandler } = useHeaders();\n\n  const { state, request, success, failure } = useFetchReducer<TData, TError>();\n\n  const [isFetch, { onHandler: fetchStart, offHandler: fetchFinish }] =\n    useTrigger();\n\n  useEffect(() => {\n    if (!isFetch) {\n      return;\n    }\n\n    let cancelRequest = false;\n\n    const doFetch = async () => {\n      const { responseType, ...optionsFetch } = options;\n\n      const response = await fetch(url.toString(), optionsFetch);\n\n      setHeadersHandler(response.headers);\n\n      if (!response.ok) {\n        const body = await response.json();\n        throw body;\n      }\n\n      let data = null;\n\n      switch (responseType) {\n        case \"text\":\n          data = await response.text();\n          break;\n        case \"json\":\n          data = await response.json();\n          break;\n        case \"formData\":\n          data = await response.formData();\n          break;\n        case \"blob\":\n          data = await response.blob();\n          break;\n        case \"arrayBuffer\":\n          data = await response.arrayBuffer();\n          break;\n        default:\n          throw new Error(\"Not found type of response\");\n      }\n\n      if (!cancelRequest) {\n        fetchFinish();\n        success(data);\n      }\n    };\n\n    doFetch().catch((error) => {\n      if (!cancelRequest) {\n        fetchFinish();\n        clearHeadersHandler();\n        failure(error);\n      }\n    });\n\n    return () => {\n      cancelRequest = true;\n    };\n  }, [\n    clearHeadersHandler,\n    failure,\n    isFetch,\n    options,\n    setHeadersHandler,\n    success,\n    url,\n    fetchFinish,\n  ]);\n\n  const doFetch = useCallback(\n    (options?: UseFetchOption) => {\n      request();\n\n      setOptions(() => ({\n        responseType: \"json\",\n        ...options,\n      }));\n\n      fetchStart();\n    },\n    [request, fetchStart]\n  );\n\n  return tuple(state, doFetch, headers);\n};\n","export const tuple = <T extends unknown[]>(...args: T): T => args;\n","import { useCallback, useMemo, useReducer } from \"react\";\nimport { State, ActionFetch } from \"./types\";\n\nexport const useFetchReducer = <TData, TError>() => {\n  const initialState = useMemo<State<TData, TError>>(\n    () => ({\n      status: \"init\",\n      error: undefined,\n      data: undefined,\n    }),\n    []\n  );\n\n  const fetchReducer = useCallback(\n    (\n      state: State<TData, TError>,\n      action: ActionFetch<TData, TError>\n    ): State<TData, TError> => {\n      switch (action.type) {\n        case \"request\":\n          return { ...initialState, status: \"request\", data: state.data };\n        case \"success\":\n          return { ...initialState, status: \"success\", data: action.payload };\n        case \"failure\":\n          return { ...initialState, status: \"failure\", error: action.payload };\n        default:\n          return state;\n      }\n    },\n    [initialState]\n  );\n\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  const request = useCallback(() => dispatch({ type: \"request\" }), []);\n\n  const success = useCallback(\n    (payload) => dispatch({ type: \"success\", payload }),\n    []\n  );\n\n  const failure = useCallback(\n    (payload) => dispatch({ type: \"failure\", payload }),\n    []\n  );\n\n  return {\n    state,\n    request,\n    success,\n    failure,\n  };\n};\n","import { useCallback, useState } from \"react\";\n\ntype useHeadersState = {\n  [key: string]: string;\n} | null;\n\nexport const useHeaders = () => {\n  const [headers, setHeaders] = useState<useHeadersState>(null);\n\n  const setHeadersHandler = useCallback((headers: Headers) => {\n    const headersFinal = Array.from(headers.entries()).reduce(\n      (res, [key, value]) => ({\n        ...res,\n        [key]: value,\n      }),\n      {}\n    );\n\n    setHeaders(() => headersFinal);\n  }, []);\n\n  const clearHeadersHandler = useCallback(() => {\n    setHeaders(() => null);\n  }, []);\n\n  return {\n    headers,\n    setHeadersHandler,\n    clearHeadersHandler,\n  };\n};\n","import { useState, useCallback } from 'react';\nimport { tuple } from './tuple';\n\nexport const useTrigger = (initialState = false) => {\n  const [state, setState] = useState(initialState);\n\n  const onHandler = useCallback(() => setState(() => true), []);\n\n  const offHandler = useCallback(() => setState(() => false), []);\n\n  const togglerHandler = useCallback(() => setState((prev) => !prev), []);\n\n  return tuple(state, {\n    onHandler,\n    offHandler,\n    togglerHandler,\n  });\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(447);\n"],"sourceRoot":""}